"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    menus: [Menu!]! @all
    menus(orderBy: _ @orderBy(columns: ["sort", "name"])): [Menu!]! @all

    categories: [Category!]! @all
    categories(orderBy: _ @orderBy(columns: ["sort", "name"])): [Category!]! @all

    posts: [Post]! @all
    posts(orderBy: _ @orderBy(columns: ["created_at"])): [Post!]! @all
    post(
       "Search by email url"
       url: String! @eq
    ): Post @find
}

type PostPaginator {
  data: [Post!]!
  paginatorInfo: PaginatorInfo!
}

type Profile {
   "Unique primary key."
    id: ID!

    first_name: String!

    last_name: String!

    dob: DateTime!

    avatar: String!

   "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
    

}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!

    profile: Profile!
}


type Menu {
   "Unique primary key."
    id: ID!

     "Non-unique name."
    name: String!

    "Unique path."
    path: String!

    sort: Int!

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Category {
   "Unique primary key."
    id: ID!

     "Non-unique name."
    name: String!

    sort: Int!

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Post {

   "Unique primary key."
    id: ID!

    title: String!

    status: Int!

    content: String!
    
    url: String!

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!

    short_content: String!

    categories: [Category!]!

    tags: [Tag]!

    user: User!

}

type Tag {
  "Unique primary key."
    id: ID!

     "Non-unique name."
    name: String!


    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}
